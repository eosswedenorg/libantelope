#include <libeosio/ec.hpp>
#include <libeosio/WIF.hpp>
#include <vector>
#include <doctest.h>

TEST_CASE("ec::pubkey") {


	struct testcase {
		std::string name;
		libeosio::ec_privkey_t priv;
		libeosio::ec_pubkey_t expected;
	};

	std::vector<struct testcase> tests {
		{
			"valid #1",
			// 5KWCD8zm3nHbYSZhq4rfnX3VxXGnKzcorwnqi9QoYvkyj6kSVYr
			{
				0xde, 0x4f, 0x8a, 0x59, 0x12, 0x2d, 0xee, 0x24,
				0xf3, 0x75, 0x39, 0x00, 0xa5, 0x2c, 0x64, 0x58,
				0x31, 0x5a, 0x1e, 0xea, 0x14, 0x30, 0x1b, 0x4d,
				0x61, 0x6d, 0x2e, 0xab, 0x48, 0x48, 0xf3, 0xe1
			},
			// EOS6bmyyDPYt3ZXZF1VGKnKN4pbMuZPnFBoK7xkvXmyYUnXmBTSYq
			{
				0x02, 0xe1, 0x71, 0x50, 0x31, 0x19, 0x5b, 0xe8,
				0xe0, 0x92, 0xec, 0x61, 0xfc, 0x93, 0xa8, 0x81,
				0x2a, 0x1e, 0x83, 0x74, 0xc3, 0x5f, 0x5b, 0xe0,
				0xfd, 0xb7, 0xd4, 0x32, 0xa6, 0xb9, 0x87, 0x61,
				0x1b
			}
		},
		{
			"valid #2",
			// 5KCjzBFK5jiUdwjwFzqymHbVoUEjhbK86CGiDKtuwXrP2xyDZLY
			{
				0xb6, 0xae, 0xfa, 0x9a, 0xc2, 0x1e, 0x56, 0xb8,
				0x70, 0xa1, 0x14, 0x4e, 0x7f, 0xaa, 0x70, 0x30,
				0x5b, 0x6d, 0xc4, 0x94, 0xd5, 0x05, 0xba, 0xf7,
				0x77, 0x82, 0x93, 0xf2, 0x91, 0x15, 0x9b, 0x00
			},
			// EOS75mzwjLQAKaVdtGKe5MjfjQY9UJRZqa1iGcpkvZQ6jLE8ptE2j
			{
				0x03, 0x21, 0x05, 0x4d, 0x71, 0x0d, 0x08, 0x32,
				0x67, 0xf9, 0xca, 0xa4, 0x16, 0x9e, 0x42, 0xca,
				0xa6, 0xa2, 0x90, 0xe4, 0xbf, 0xe4, 0xc6, 0x79,
				0x30, 0x69, 0x3d, 0xe7, 0x00, 0x76, 0x40, 0xea,
				0x11
			}
		},
		{
			"valid #3",
			// 5KfQfL9BKMsW1eNBYqFRJ7SgDAFzJcNH8UsXd1RWHdFUzUxJEKf
			{
				0xf3, 0x3b, 0xd8, 0x45, 0xaf, 0x53, 0x1e, 0x51,
				0x88, 0x62, 0x03, 0x46, 0xa9, 0x13, 0x54, 0x5b,
				0xf9, 0x6c, 0x95, 0x23, 0x9b, 0xbb, 0xbe, 0xd9,
				0xff, 0x91, 0xde, 0x0d, 0x5a, 0x38, 0x9e, 0x8f
			},
			// EOS6DqV9RU4D5bN8TMg6G4Gcby56UxxBMfk21XotQ2TDuzDyA3QjN
			{
				0x02, 0xaf, 0xa0, 0x46, 0xa0, 0x36, 0x8a, 0xf4,
				0x55, 0xd1, 0x60, 0x8d, 0xf8, 0x6d, 0x2f, 0x73,
				0x24, 0xe4, 0x6e, 0xa9, 0xf2, 0x37, 0x47, 0x83,
				0x6b, 0x74, 0x3a, 0x0e, 0xb6, 0x8f, 0x6b, 0xed,
				0x51
			}
		},
		{
			"valid #4",
			// 5KfdPV9x9BNqrDQoB4XfX8PyGyA6Nhwi6DtAG9KmEpyRNomNFoP
			{
				0xf3, 0xbb, 0x64, 0xc9, 0xc8, 0x8c, 0xb1, 0x8c,
				0xc2, 0xbc, 0xd7, 0x03, 0x5c, 0x53, 0xa0, 0xd6,
				0xeb, 0x53, 0xea, 0xb5, 0x20, 0x45, 0x92, 0xb1,
				0xed, 0x9b, 0x1e, 0x6a, 0x01, 0xe9, 0x1a, 0xdd

			},
			// EOS7B1MBLsYbo7dppCwPG6L25AaS1wTGeaVtjLFKo8ue1Yo317G65
			{
				0x03, 0x2c, 0xe5, 0x7b, 0x76, 0x3d, 0xb6, 0x33,
				0x10, 0xb2, 0x0b, 0x04, 0xb5, 0x32, 0xeb, 0xad,
				0x0f, 0x27, 0x18, 0x77, 0xe8, 0x5a, 0x32, 0xc3,
				0x76, 0x12, 0x1a, 0x85, 0xf3, 0x61, 0x3b, 0x5d,
				0x4b
			}
		},
		{
			"valid #5",
			// 5KRrtvA13uHmKVy6ofjEQQvcciGKeC2NTGYeoAGMYrNp56dn98y
			{
				0xd4, 0x78, 0xdb, 0x03, 0x2d, 0xf3, 0xfa, 0xad,
				0x21, 0xa0, 0xdd, 0x36, 0xb1, 0xf5, 0xf5, 0x13,
				0xc4, 0x8a, 0xe1, 0xa8, 0x37, 0xfa, 0x2e, 0x1b,
				0xaa, 0x69, 0x2c, 0xf8, 0xf9, 0x5e, 0xb1, 0x87

			},
			// EOS54o7UHWAPXxHtrWS3uoZDJ6npud84R9w8XVMPYZNKhKiQgkQ1k
			{
				0x02, 0x17, 0x66, 0xc5, 0xb1, 0x59, 0xd7, 0xbe,
				0x10, 0x82, 0xc5, 0x7f, 0xa3, 0xd2, 0xc8, 0x21,
				0xd8, 0x48, 0x09, 0x34, 0xdf, 0x66, 0x61, 0x23,
				0x6d, 0xb0, 0x85, 0x73, 0x77, 0xe7, 0xd8, 0xe8,
				0x3b
			}
		},
		{
			"valid #6",
			// 5JXVrPTX5WvZ524wEVYoThGFUJZkpkemQPLDa5MCrRo3MoGatyC
			{
				0x5d, 0x93, 0x6e, 0x47, 0x44, 0x35, 0x85, 0x33,
				0xbc, 0xde, 0xff, 0xa7, 0x88, 0xe7, 0x9c, 0x6f,
				0x53, 0xbc, 0x8e, 0xbf, 0x5e, 0x8e, 0xdb, 0x7e,
				0x36, 0x2b, 0xdf, 0x11, 0xff, 0x77, 0x59, 0x98
			},
			// EOS7d5Nq7w2xscT6V6qZkDCJy2EnMFE8TGuQ9u2LyBE1fSZFiitrp
			{
				0x03, 0x68, 0x17, 0x1e, 0x3b, 0x22, 0x0a, 0x6b,
				0x6b, 0xb6, 0xfa, 0x1b, 0x32, 0xdd, 0xce, 0xf6,
				0x34, 0x7a, 0x34, 0x62, 0xb7, 0xf9, 0xea, 0x1c,
				0xa2, 0xf9, 0xf0, 0x2c, 0x50, 0x3e, 0xff, 0xf3,
				0xfa
			}
		}
	};

	libeosio::ec_init();

	for(auto it = tests.begin(); it != tests.end(); it++) {

		SUBCASE(it->name.c_str()) {
			libeosio::ec_pubkey_t result;
			CHECK( libeosio::ec_get_publickey(&it->priv, &result) == 0 );
			CHECK( result == it->expected );
		}
	}

	libeosio::ec_shutdown();
}